<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Markdown on Computable(verse)</title>
    <link>http://computableverse.com/tags/markdown/index.xml</link>
    <description>Recent content in Markdown on Computable(verse)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://computableverse.com/tags/markdown/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Convert any folder into a website using Pandoc and a Makefile</title>
      <link>http://computableverse.com/blog/create-website-using-pandoc-make-file/</link>
      <pubDate>Fri, 28 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://computableverse.com/blog/create-website-using-pandoc-make-file/</guid>
      <description>&lt;p&gt;It was a long day. I was lurking HackerNews and /r/programming.
Things were going slow. I had been taking quite a lot of notes
inside a plain ol&amp;rsquo; directory. I know, 2016 right?! But every
single note taking application had failed me.&lt;/p&gt;

&lt;p&gt;Although I had no use of viewing my &lt;em&gt;markdown&lt;/em&gt; notes in the
browser, I decided to do it anyways. For the sake of completeness.&lt;/p&gt;

&lt;p&gt;I immediately thought of &lt;a href=&#34;https://github.com/oxalorg/dystic&#34;&gt;dystic&lt;/a&gt;,
my personal static site generator, but dissed it as too heavy.
I decided then, that I wanted something I could hack together in
the next 10 minutes.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;I immediately thought of &lt;a href=&#34;https://pandoc.org&#34;&gt;pandoc&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pandoc --toc --from markdown --to html my-note.md -o my-note.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Done. Easy, wasn&amp;rsquo;t it?&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s do this for the entire directory, &lt;em&gt;recursively&lt;/em&gt;. We could
write a simple shell script, but that would run everytime on everyfile.
We don&amp;rsquo;t want that. We want to regenerate the &lt;em&gt;html&lt;/em&gt; only if the
&lt;em&gt;markdown&lt;/em&gt; counterpart has been updated since the previous build.&lt;/p&gt;

&lt;p&gt;What &lt;del&gt;better&lt;/del&gt; faster way than to use GNU Make for &lt;code&gt;mtime&lt;/code&gt; based
builds.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /notes
nvim Makefile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;/notes/Makefile&lt;/strong&gt;:&lt;/p&gt;
# Find all markdown files
MARKDOWN=$(shell find . -iname &#34;*.md&#34;)
# Form all &#39;html&#39; counterparts
HTML=$(MARKDOWN:.md=.html)

.PHONY = all tar clean
all: $(HTML)

%.html: %.md
    pandoc --from markdown --to html $&lt; -o $@

tar: $(MARKDOWN)
    tar --exclude=notes.tar.gz --exclude=.git/ -czvf notes.tar.gz ./

clean:
    rm $(HTML)

&lt;p&gt;We&amp;rsquo;re almost done. Now just run &lt;code&gt;make all&lt;/code&gt; in &lt;code&gt;/notes&lt;/code&gt; and all your
&lt;em&gt;markdown&lt;/em&gt; files will be built into &lt;em&gt;html&lt;/em&gt; files.&lt;/p&gt;

&lt;p&gt;Run &lt;code&gt;make clean&lt;/code&gt; to remove all the html files and run &lt;code&gt;make tar&lt;/code&gt; to
backup all your notes.&lt;/p&gt;

&lt;p&gt;Simply open your browser and type &amp;ldquo;/notes&amp;rdquo; (or your complete
path) into the address bar and voila! It&amp;rsquo;s not pretty but it
works. (PS: use &lt;code&gt;file:///path/to/folder&lt;/code&gt; if not using chrome)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;To make your files more pretty use my minimal css theme
&lt;a href=&#34;https://github.com/oxalorg/sakura&#34;&gt;sakura&lt;/a&gt; and then change the pandoc
command as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /notes
wget &amp;quot;https://raw.githubusercontent.com/oxalorg/sakura/master/sakura.css&amp;quot;
pandoc --css /notes/sakura.css --from markdown --to html $&amp;lt; -o $@
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you can remote sync the entire website easily using rsync:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rsync --exclude &#39;*.md&#39; source/ destination/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s the basics. This can easily be used to create your own
blog, websites, small projects, pretty much anything. The
best part being that it needs no &amp;lsquo;rules&amp;rsquo; from your end,
you&amp;rsquo;re free to structure your content anyway you like; something
which is missing from almost every static site generator out
there. This is one of my quibbles which I&amp;rsquo;m trying to fix with
&lt;a href=&#34;https://github.com/oxalorg/dystic&#34;&gt;dystic&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I added a couple more feature including making automatic
indexes, sorting using title/date, metadata parsing etc. But I
quickly realised that it&amp;rsquo;s a lot of pain to be doing it using
&lt;em&gt;only&lt;/em&gt; GNU Make. So I&amp;rsquo;ve decided to start working on &lt;code&gt;dystic&lt;/code&gt;
again. Maybe even re-write it in &lt;code&gt;nim&lt;/code&gt; or &lt;code&gt;golang&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let me know your comments below.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>